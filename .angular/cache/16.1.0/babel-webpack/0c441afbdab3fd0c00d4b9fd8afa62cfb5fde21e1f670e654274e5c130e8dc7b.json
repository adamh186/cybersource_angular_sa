{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as CryptoJS from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\n// end: safe-resource-url.pipe.ts\nclass PaymentConfirmComponent {\n  ngAfterViewInit() {\n    console.log('ngAfterViewInit triggered.');\n  }\n  constructor(formBuilder, http, datePipe) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.datePipe = datePipe;\n    this.endpoint = environment.endpoint;\n    this.paymentForm = document.getElementById('payment_form');\n    this.checkoutForm = this.formBuilder.group({\n      access_key: 'c66502af927a3533bfa6d215394eda4c',\n      profile_id: 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F',\n      transaction_uuid: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15),\n      signed_field_names: 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency',\n      unsigned_field_names: '',\n      signed_date_time: this.dateString(),\n      locale: 'en-US',\n      transaction_type: 'authorization',\n      amount: '25',\n      reference_number: '123456789',\n      currency: 'usd',\n      submit: 'Submit',\n      signature: ''\n    });\n  }\n  submitForm($event) {\n    $event.stopPropagation();\n    const signature = this.sign(this.checkoutForm.value);\n    this.checkoutForm.controls['signature'].setValue(\"xUD8qAbbF3fz9A9KZysPnloLi91ukvY9g+F/CEEkbkc=\");\n    const reqBody = new FormData();\n    for (const field in this.checkoutForm.controls) {\n      const control = this.checkoutForm.get(field);\n      if (control) {\n        console.log(field + \"=\" + control.value);\n        reqBody.append(field, control.value);\n      }\n    }\n    const headers = new HttpHeaders({\n      'Authority': 'testsecureacceptance.cybersource.com',\n      'Method': 'POST',\n      'Path': '/embedded/pay',\n      'Scheme': 'https',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n    this.http.post(environment.endpoint, reqBody).subscribe(res => console.log(res));\n    console.warn('Your order has been submitted', reqBody);\n  }\n  sign(params) {\n    console.log(params);\n    return this.signData(this.buildDataToSign(params), environment.SECRET_KEY);\n  }\n  signData(data, secretKey) {\n    const signature = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey);\n    const signatureBase = signature.toString(CryptoJS.enc.Base64);\n    console.log(signatureBase);\n    const signatureString = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey).toString(CryptoJS.enc.Base64);\n    console.log(signatureString);\n    return signatureString;\n  }\n  buildDataToSign(params) {\n    const signedFieldNames = params.signed_field_names.split(',');\n    const dataToSign = signedFieldNames.map(field => `${field}=${params[field]}`);\n    console.log('!!!!!!!!!!!');\n    console.log(this.commaSeparate(dataToSign));\n    return this.commaSeparate(dataToSign);\n  }\n  commaSeparate(dataToSign) {\n    return dataToSign.join(',');\n  }\n  dateString() {\n    return this.datePipe.transform(Date.now(), 'yyyy-MM-ddTHH:mm:ss') + \"Z\";\n  }\n}\nPaymentConfirmComponent.ɵfac = function PaymentConfirmComponent_Factory(t) {\n  return new (t || PaymentConfirmComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.DatePipe));\n};\nPaymentConfirmComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentConfirmComponent,\n  selectors: [[\"app-payment-confirm\"]],\n  decls: 27,\n  vars: 1,\n  consts: [[\"target\", \"frame\", \"action\", \"embedded\", \"method\", \"POST\", 3, \"formGroup\", \"ngSubmit\"], [\"form\", \"\"], [\"type\", \"hidden\", \"formControlName\", \"access_key\"], [\"type\", \"hidden\", \"formControlName\", \"profile_id\"], [\"type\", \"hidden\", \"formControlName\", \"transaction_uuid\"], [\"type\", \"hidden\", \"formControlName\", \"signed_field_names\"], [\"type\", \"hidden\", \"formControlName\", \"unsigned_field_names\"], [\"type\", \"hidden\", \"formControlName\", \"signed_date_time\"], [\"type\", \"hidden\", \"formControlName\", \"locale\"], [\"for\", \"transaction_type\"], [\"id\", \"transaction_type\", \"type\", \"text\", \"formControlName\", \"transaction_type\"], [\"for\", \"amount\"], [\"id\", \"amount\", \"type\", \"text\", \"formControlName\", \"amount\"], [\"for\", \"reference_number\"], [\"id\", \"reference_number\", \"type\", \"text\", \"formControlName\", \"reference_number\"], [\"type\", \"submit\", 1, \"button\"], [\"title\", \"frame\", \"name\", \"frame\", \"src\", \"/assets/iframe.jpg\", \"width\", \"600\", \"height\", \"400\", 1, \"custom-frame\"], [\"frame\", \"\"]],\n  template: function PaymentConfirmComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Payment Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function PaymentConfirmComponent_Template_form_ngSubmit_2_listener($event) {\n        return ctx.submitForm($event);\n      });\n      i0.ɵɵelement(4, \"input\", 2)(5, \"input\", 3)(6, \"input\", 4)(7, \"input\", 5)(8, \"input\", 6)(9, \"input\", 7)(10, \"input\", 8);\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 9);\n      i0.ɵɵtext(13, \" transaction_type \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 11);\n      i0.ɵɵtext(17, \" amount \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\")(20, \"label\", 13);\n      i0.ɵɵtext(21, \" reference_number \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 15);\n      i0.ɵɵtext(24, \"Purchase\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"iframe\", 16, 17);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PaymentConfirmComponent };","map":{"version":3,"names":["HttpHeaders","environment","CryptoJS","PaymentConfirmComponent","ngAfterViewInit","console","log","constructor","formBuilder","http","datePipe","endpoint","paymentForm","document","getElementById","checkoutForm","group","access_key","profile_id","transaction_uuid","Math","random","toString","substring","signed_field_names","unsigned_field_names","signed_date_time","dateString","locale","transaction_type","amount","reference_number","currency","submit","signature","submitForm","$event","stopPropagation","sign","value","controls","setValue","reqBody","FormData","field","control","get","append","headers","post","subscribe","res","warn","params","signData","buildDataToSign","SECRET_KEY","data","secretKey","HmacSHA256","HMAC_SHA256","signatureBase","enc","Base64","signatureString","signedFieldNames","split","dataToSign","map","commaSeparate","join","transform","Date","now","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","DatePipe","selectors","decls","vars","consts","template","PaymentConfirmComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PaymentConfirmComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment-confirm\\payment-confirm.component.ts","C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment-confirm\\payment-confirm.component.html"],"sourcesContent":["import { Component, Pipe, PipeTransform } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as CryptoJS from 'crypto-js';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DatePipe } from '@angular/common';\n\n// end: safe-resource-url.pipe.ts\n@Component({\n  selector: 'app-payment-confirm',\n  templateUrl: './payment-confirm.component.html',\n  styleUrls: ['./payment-confirm.component.scss']\n})\nexport class PaymentConfirmComponent {\n  endpoint = environment.endpoint;\n  paymentForm = document.getElementById('payment_form') as HTMLFormElement;\n  checkoutForm = this.formBuilder.group({\n    access_key: 'c66502af927a3533bfa6d215394eda4c',\n    profile_id: 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F',\n    transaction_uuid: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15),\n    signed_field_names: 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency',\n    unsigned_field_names: '',\n    signed_date_time: this.dateString(),\n    locale:  'en-US',\n    transaction_type: 'authorization',\n    amount: '25',\n    reference_number: '123456789',\n    currency: 'usd',\n    submit: 'Submit',\n    signature: ''\n  });\n  ngAfterViewInit() {\n    console.log('ngAfterViewInit triggered.');    \n  }\n  constructor(    \n    private formBuilder: FormBuilder, private http: HttpClient, private datePipe: DatePipe\n  ) {}\n\n  submitForm($event: any): void {            \n      $event.stopPropagation();    \n      const signature = this.sign(this.checkoutForm.value);\n      this.checkoutForm.controls['signature'].setValue(\"xUD8qAbbF3fz9A9KZysPnloLi91ukvY9g+F/CEEkbkc=\");\n      const reqBody = new FormData();\n      for (const field in this.checkoutForm.controls) {\n        const control = this.checkoutForm.get(field);\n        if (control) {\n          console.log(field + \"=\" + control.value);\n          reqBody.append(field, control.value);\n        }\n        \n      }\n      const headers = new HttpHeaders({'Authority':'testsecureacceptance.cybersource.com', \n                          'Method':'POST',\n                          'Path':'/embedded/pay',\n                          'Scheme':'https',\n                          'Content-Type': 'application/x-www-form-urlencoded'})\n      this.http.post(environment.endpoint, reqBody).subscribe(\n        (res) => console.log(res)\n      );\n      console.warn('Your order has been submitted', reqBody);     \n  }\n\n  public sign(params: any): string {\n      console.log(params);\n      return this.signData(this.buildDataToSign(params), environment.SECRET_KEY);\n  }\n\n  public signData(data: string, secretKey: string): string {\n      const signature = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey);\n      const signatureBase = signature.toString(CryptoJS.enc.Base64);\n      console.log(signatureBase);\n      const signatureString = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey).toString(CryptoJS.enc.Base64);\n      console.log(signatureString);\n      return signatureString;\n  }\n\n  public buildDataToSign(params: any): string {\n      const signedFieldNames = params.signed_field_names.split(',');\n      const dataToSign = signedFieldNames.map((field: string) => `${field}=${params[field]}`);\n      console.log('!!!!!!!!!!!');\n      console.log(this.commaSeparate(dataToSign));\n      return this.commaSeparate(dataToSign);\n  }\n\n  public commaSeparate(dataToSign: string[]): string {\n      return dataToSign.join(',');\n  }\n\n  private dateString(): string {\n    return this.datePipe.transform(Date.now(), 'yyyy-MM-ddTHH:mm:ss') + \"Z\";\n  }\n\n}\n","<p>Payment Details</p>\n\n\n<form [formGroup]=\"checkoutForm\" target=\"frame\" action=\"embedded\" #form method=\"POST\" (ngSubmit)=\"submitForm($event)\">\n    <input type=\"hidden\" formControlName=\"access_key\">\n    <input type=\"hidden\" formControlName=\"profile_id\">\n    <input type=\"hidden\" formControlName=\"transaction_uuid\">\n    <input type=\"hidden\" formControlName=\"signed_field_names\">\n    <input type=\"hidden\" formControlName=\"unsigned_field_names\">\n    <input type=\"hidden\" formControlName=\"signed_date_time\">\n    <input type=\"hidden\" formControlName=\"locale\">\n    <div>\n      <label for=\"transaction_type\">\n        transaction_type\n      </label>\n      <input id=\"transaction_type\" type=\"text\" formControlName=\"transaction_type\">\n    </div>\n  \n    <div>\n      <label for=\"amount\">\n        amount\n      </label>\n      <input id=\"amount\" type=\"text\" formControlName=\"amount\">\n    </div>\n  \n    <div>\n        <label for=\"reference_number\">\n            reference_number\n        </label>\n        <input id=\"reference_number\" type=\"text\" formControlName=\"reference_number\">\n    </div>\n    <button class=\"button\" type=\"submit\">Purchase</button>\n    <iframe title=\"frame\" name=\"frame\" src=\"/assets/iframe.jpg\" class=\"custom-frame\" #frame width=\"600\" height=\"400\" ></iframe>\n  </form>\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}