{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as CryptoJS from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nclass SafeResourceUrlPipe {\n  constructor(domSanitizer) {\n    this.domSanitizer = domSanitizer;\n  }\n  transform(url) {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\nSafeResourceUrlPipe.ɵfac = function SafeResourceUrlPipe_Factory(t) {\n  return new (t || SafeResourceUrlPipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\nSafeResourceUrlPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"safeResourceUrl\",\n  type: SafeResourceUrlPipe,\n  pure: true\n});\nexport { SafeResourceUrlPipe };\n// end: safe-resource-url.pipe.ts\nclass PaymentConfirmComponent {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.paymentForm = document.getElementById('payment_form');\n    this.checkoutForm = this.formBuilder.group({\n      access_key: 'c66502af927a3533bfa6d215394eda4c',\n      profile_id: 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F',\n      transaction_uuid: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15),\n      signed_field_names: 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency',\n      unsigned_field_names: '',\n      signed_date_time: new Date(),\n      locale: 'en-US',\n      transaction_type: 'authorization',\n      amount: '25',\n      reference_number: '123456789',\n      signature: ''\n    });\n  }\n  submitForm($event) {\n    $event.stopPropagation();\n    const signature = this.sign(this.checkoutForm.value);\n    this.checkoutForm.controls['signature'].setValue(signature);\n    this.http.post(environment.endpoint, this.checkoutForm.value);\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    return true;\n  }\n  sign(params) {\n    console.log(params);\n    return this.signData(this.buildDataToSign(params), environment.SECRET_KEY);\n  }\n  signData(data, secretKey) {\n    const signature = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey);\n    const signatureBase = signature.toString(CryptoJS.enc.Base64);\n    console.log(signatureBase);\n    return signatureBase;\n  }\n  buildDataToSign(params) {\n    const signedFieldNames = params.signed_field_names.split(',');\n    const dataToSign = signedFieldNames.map(field => `${field}=${params[field]}`);\n    console.log('!!!!!!!!!!!');\n    console.log(this.commaSeparate(dataToSign));\n    return this.commaSeparate(dataToSign);\n  }\n  commaSeparate(dataToSign) {\n    return dataToSign.join(',');\n  }\n}\nPaymentConfirmComponent.ɵfac = function PaymentConfirmComponent_Factory(t) {\n  return new (t || PaymentConfirmComponent)(i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\nPaymentConfirmComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentConfirmComponent,\n  selectors: [[\"app-payment-confirm\"]],\n  decls: 26,\n  vars: 1,\n  consts: [[\"target\", \"sa_iframe\", \"action\", \"https://testsecureacceptance.cybersource.com/embedded/pay\", \"method\", \"POST\", 3, \"formGroup\", \"ngSubmit\"], [\"form\", \"\"], [\"type\", \"hidden\", \"formControlName\", \"access_key\"], [\"type\", \"hidden\", \"formControlName\", \"profile_id\"], [\"type\", \"hidden\", \"formControlName\", \"transaction_uuid\"], [\"type\", \"hidden\", \"formControlName\", \"signed_field_names\"], [\"type\", \"hidden\", \"formControlName\", \"unsigned_field_names\"], [\"type\", \"hidden\", \"formControlName\", \"signed_date_time\"], [\"type\", \"hidden\", \"formControlName\", \"locale\"], [\"for\", \"transaction_type\"], [\"id\", \"transaction_type\", \"type\", \"text\", \"formControlName\", \"transaction_type\"], [\"for\", \"amount\"], [\"id\", \"amount\", \"type\", \"text\", \"formControlName\", \"amount\"], [\"for\", \"reference_number\"], [\"id\", \"reference_number\", \"type\", \"text\", \"formControlName\", \"reference_number\"], [\"type\", \"submit\", 1, \"button\"], [\"title\", \"Payment Frame\", \"name\", \"sa_iframe\", \"src\", \"iframe.jpg\", \"id\", \"sa_iframe\", \"height\", \"430\", \"width\", \"600\"]],\n  template: function PaymentConfirmComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Payment Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function PaymentConfirmComponent_Template_form_ngSubmit_2_listener($event) {\n        return ctx.submitForm($event);\n      });\n      i0.ɵɵelement(4, \"input\", 2)(5, \"input\", 3)(6, \"input\", 4)(7, \"input\", 5)(8, \"input\", 6)(9, \"input\", 7)(10, \"input\", 8);\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 9);\n      i0.ɵɵtext(13, \" transaction_type \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 11);\n      i0.ɵɵtext(17, \" amount \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\")(20, \"label\", 13);\n      i0.ɵɵtext(21, \" reference_number \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 15);\n      i0.ɵɵtext(24, \"Purchase\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(25, \"iframe\", 16);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PaymentConfirmComponent };","map":{"version":3,"names":["environment","CryptoJS","SafeResourceUrlPipe","constructor","domSanitizer","transform","url","bypassSecurityTrustResourceUrl","i0","ɵɵdirectiveInject","i1","DomSanitizer","pure","PaymentConfirmComponent","formBuilder","http","paymentForm","document","getElementById","checkoutForm","group","access_key","profile_id","transaction_uuid","Math","random","toString","substring","signed_field_names","unsigned_field_names","signed_date_time","Date","locale","transaction_type","amount","reference_number","signature","submitForm","$event","stopPropagation","sign","value","controls","setValue","post","endpoint","console","warn","params","log","signData","buildDataToSign","SECRET_KEY","data","secretKey","HmacSHA256","HMAC_SHA256","signatureBase","enc","Base64","signedFieldNames","split","dataToSign","map","field","commaSeparate","join","i2","FormBuilder","i3","HttpClient","selectors","decls","vars","consts","template","PaymentConfirmComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PaymentConfirmComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment-confirm\\payment-confirm.component.ts","C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment-confirm\\payment-confirm.component.html"],"sourcesContent":["import { Component, Pipe, PipeTransform } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as CryptoJS from 'crypto-js';\nimport { FormBuilder } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeResourceUrl' })\nexport class SafeResourceUrlPipe implements PipeTransform {\n\n  constructor(private domSanitizer: DomSanitizer) { }\n\n  transform(url: any) {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n\n// end: safe-resource-url.pipe.ts\n@Component({\n  selector: 'app-payment-confirm',\n  templateUrl: './payment-confirm.component.html',\n  styleUrls: ['./payment-confirm.component.scss']\n})\nexport class PaymentConfirmComponent {\n  paymentForm = document.getElementById('payment_form') as HTMLFormElement;\n  checkoutForm = this.formBuilder.group({\n    access_key: 'c66502af927a3533bfa6d215394eda4c',\n    profile_id: 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F',\n    transaction_uuid: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15),\n    signed_field_names: 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency',\n    unsigned_field_names: '',\n    signed_date_time:  new Date(),\n    locale:  'en-US',\n    transaction_type: 'authorization',\n    amount: '25',\n    reference_number: '123456789',\n    signature: ''\n  });\n\n  constructor(    \n    private formBuilder: FormBuilder, private http: HttpClient\n  ) {}\n\n  submitForm($event: any): boolean {            \n      $event.stopPropagation();    \n      const signature = this.sign(this.checkoutForm.value);\n      this.checkoutForm.controls['signature'].setValue(signature);\n      this.http.post(environment.endpoint, this.checkoutForm.value);\n      console.warn('Your order has been submitted', this.checkoutForm.value);\n      return true;\n  }\n\n  public sign(params: any): string {\n      console.log(params);\n      return this.signData(this.buildDataToSign(params), environment.SECRET_KEY);\n  }\n\n  public signData(data: string, secretKey: string): string {\n      const signature = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey);\n      const signatureBase = signature.toString(CryptoJS.enc.Base64);\n      console.log(signatureBase);\n      return signatureBase;\n  }\n\n  public buildDataToSign(params: any): string {\n      const signedFieldNames = params.signed_field_names.split(',');\n      const dataToSign = signedFieldNames.map((field: string) => `${field}=${params[field]}`);\n      console.log('!!!!!!!!!!!');\n      console.log(this.commaSeparate(dataToSign));\n      return this.commaSeparate(dataToSign);\n  }\n\n  public commaSeparate(dataToSign: string[]): string {\n      return dataToSign.join(',');\n  }\n}\n","<p>Payment Details</p>\n\n\n<form [formGroup]=\"checkoutForm\" target=\"sa_iframe\" action=\"https://testsecureacceptance.cybersource.com/embedded/pay\" #form method=\"POST\" (ngSubmit)=\"submitForm($event)\">\n    <input type=\"hidden\" formControlName=\"access_key\">\n    <input type=\"hidden\" formControlName=\"profile_id\">\n    <input type=\"hidden\" formControlName=\"transaction_uuid\">\n    <input type=\"hidden\" formControlName=\"signed_field_names\">\n    <input type=\"hidden\" formControlName=\"unsigned_field_names\">\n    <input type=\"hidden\" formControlName=\"signed_date_time\">\n    <input type=\"hidden\" formControlName=\"locale\">\n    <div>\n      <label for=\"transaction_type\">\n        transaction_type\n      </label>\n      <input id=\"transaction_type\" type=\"text\" formControlName=\"transaction_type\">\n    </div>\n  \n    <div>\n      <label for=\"amount\">\n        amount\n      </label>\n      <input id=\"amount\" type=\"text\" formControlName=\"amount\">\n    </div>\n  \n    <div>\n        <label for=\"reference_number\">\n            reference_number\n        </label>\n        <input id=\"reference_number\" type=\"text\" formControlName=\"reference_number\">\n    </div>\n    <button class=\"button\" type=\"submit\">Purchase</button>\n  \n  </form>\n\n  <iframe title=\"Payment Frame\" name=\"sa_iframe\" src=\"iframe.jpg\" id=\"sa_iframe\" height=\"430\" width=\"600\"></iframe> "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}