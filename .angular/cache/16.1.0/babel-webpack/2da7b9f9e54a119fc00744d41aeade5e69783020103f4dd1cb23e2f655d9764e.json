{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as CryptoJS from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nclass PaymentComponent {\n  constructor(formBuilder, http, datePipe) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.datePipe = datePipe;\n    this.params = new Map();\n    this.dataToSign = '';\n  }\n  ngAfterViewInit() {\n    this.postToExternalSite();\n  }\n  // create a form for the post request\n  postToExternalSite() {\n    this.dateString();\n    const form = window.document.createElement('form');\n    form.setAttribute('method', 'post');\n    form.setAttribute('action', 'https://testsecureacceptance.cybersource.com/embedded/pay');\n    // use _self to redirect in same tab, _blank to open in new tab\n    // form.setAttribute('target', '_blank');\n    form.setAttribute('target', 'sa_iframe');\n    // Add all the data to be posted as Hidden elements\n    form.appendChild(this.createHiddenElement('access_key', 'c66502af927a3533bfa6d215394eda4c'));\n    form.appendChild(this.createHiddenElement('profile_id', 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F'));\n    form.appendChild(this.createHiddenElement('transaction_uuid', '6490a82857d5'));\n    form.appendChild(this.createHiddenElement('signed_field_names', 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency'));\n    form.appendChild(this.createHiddenElement('unsigned_field_names', ''));\n    form.appendChild(this.createHiddenElement('signed_date_time', '2023-06-19T19:14:54Z'));\n    form.appendChild(this.createHiddenElement('locale', 'en-US'));\n    form.appendChild(this.createHiddenElement('transaction_type', 'authorization'));\n    form.appendChild(this.createHiddenElement('reference_number', '123456789'));\n    form.appendChild(this.createHiddenElement('amount', '25'));\n    form.appendChild(this.createHiddenElement('currency', 'usd'));\n    form.appendChild(this.createHiddenElement('signature', this.sign()));\n    console.log(form);\n    window.document.body.appendChild(form);\n    form.submit();\n  }\n  // create the form\n  createHiddenElement(name, value) {\n    const hiddenField = document.createElement('input');\n    hiddenField.setAttribute('name', name);\n    hiddenField.setAttribute('value', value);\n    hiddenField.setAttribute('type', 'hidden');\n    this.params.set(name, value);\n    this.dataToSign += name + \"=\" + value + \",\";\n    return hiddenField;\n  }\n  dateString() {\n    let date = new Date();\n    let now_utc = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n    console.log(now_utc);\n    console.log(this.datePipe.transform(new Date(now_utc), 'yyyy-MM-ddTHH:mm:ss') + \"Z\");\n    return this.datePipe.transform(new Date(now_utc), 'yyyy-MM-ddTHH:mm:ss') + \"Z\";\n  }\n  sign() {\n    this.dataToSign = this.dataToSign.substring(0, this.dataToSign.length - 1);\n    return this.signData(this.dataToSign, environment.SECRET_KEY);\n  }\n  signData(data, secretKey) {\n    const signatureString = CryptoJS.HmacSHA256(data, secretKey).toString(CryptoJS.enc.Base64);\n    console.log(signatureString);\n    return signatureString;\n  }\n  uuid(lengthOfCode) {\n    const possible = \"abcde1234567890\";\n    let text = \"\";\n    for (let i = 0; i < lengthOfCode; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n}\nPaymentComponent.ɵfac = function PaymentComponent_Factory(t) {\n  return new (t || PaymentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.DatePipe));\n};\nPaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentComponent,\n  selectors: [[\"app-payment\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[\"name\", \"sa_iframe\", \"src\", \"assets/iframe.jpg\", \"id\", \"sa_iframe\", \"height\", \"430\", \"width\", \"600\", \"scrolling\", \"yes\"]],\n  template: function PaymentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"iframe\", 0);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PaymentComponent };","map":{"version":3,"names":["environment","CryptoJS","PaymentComponent","constructor","formBuilder","http","datePipe","params","Map","dataToSign","ngAfterViewInit","postToExternalSite","dateString","form","window","document","createElement","setAttribute","appendChild","createHiddenElement","sign","console","log","body","submit","name","value","hiddenField","set","date","Date","now_utc","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","transform","substring","length","signData","SECRET_KEY","data","secretKey","signatureString","HmacSHA256","toString","enc","Base64","uuid","lengthOfCode","possible","text","i","charAt","Math","floor","random","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","DatePipe","selectors","decls","vars","consts","template","PaymentComponent_Template","rf","ctx","ɵɵelement"],"sources":["C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment\\payment.component.ts","C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment\\payment.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as CryptoJS from 'crypto-js';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss']\n})\nexport class PaymentComponent implements AfterViewInit {\n  params = new Map();\n  dataToSign : string = '';\n  constructor(    \n    private formBuilder: FormBuilder, private http: HttpClient, private datePipe: DatePipe\n  ) {}\n\n  ngAfterViewInit() {\n    this.postToExternalSite();\n  }\n  // create a form for the post request\n  postToExternalSite(): void {\n    this.dateString();\n    const form = window.document.createElement('form');\n    form.setAttribute('method', 'post');\n    form.setAttribute('action', 'https://testsecureacceptance.cybersource.com/embedded/pay');\n    // use _self to redirect in same tab, _blank to open in new tab\n    // form.setAttribute('target', '_blank');\n    form.setAttribute('target', 'sa_iframe');\n\n    // Add all the data to be posted as Hidden elements\n    \n    form.appendChild(this.createHiddenElement('access_key', 'c66502af927a3533bfa6d215394eda4c'));\n    form.appendChild(this.createHiddenElement('profile_id', 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F'));\n    form.appendChild(this.createHiddenElement('transaction_uuid', '6490a82857d5'));\n    form.appendChild(this.createHiddenElement('signed_field_names', 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency'));\n    form.appendChild(this.createHiddenElement('unsigned_field_names', ''));\n    form.appendChild(this.createHiddenElement('signed_date_time', '2023-06-19T19:14:54Z'));\n    form.appendChild(this.createHiddenElement('locale', 'en-US'));\n    form.appendChild(this.createHiddenElement('transaction_type', 'authorization'));\n    form.appendChild(this.createHiddenElement('reference_number', '123456789'));\n    form.appendChild(this.createHiddenElement('amount', '25'));    \n    form.appendChild(this.createHiddenElement('currency', 'usd'));           \n    form.appendChild(this.createHiddenElement('signature', this.sign()));    \n    console.log(form);\n    window.document.body.appendChild(form);\n    form.submit();\n  }\n  \n\n  // create the form\n  private createHiddenElement(name: string, value: string): HTMLInputElement {\n    const hiddenField = document.createElement('input');\n    hiddenField.setAttribute('name', name);\n    hiddenField.setAttribute('value', value);\n    hiddenField.setAttribute('type', 'hidden');\n    this.params.set(name, value);\n    this.dataToSign += name + \"=\" + value + \",\"\n    return hiddenField;\n  }\n\n  private dateString(): string {\n    let date = new Date();\n    let now_utc = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(),\n                    date.getUTCDate(), date.getUTCHours(),\n                    date.getUTCMinutes(), date.getUTCSeconds());\n    console.log(now_utc);\n    console.log(this.datePipe.transform(new Date(now_utc), 'yyyy-MM-ddTHH:mm:ss') + \"Z\");\n    return this.datePipe.transform(new Date(now_utc), 'yyyy-MM-ddTHH:mm:ss') + \"Z\";\n  }\n\n  public sign(): string {\n    this.dataToSign = this.dataToSign.substring(0, this.dataToSign.length - 1);        \n    return this.signData(this.dataToSign, environment.SECRET_KEY);\n  }\n\n  public signData(data: string, secretKey: string): string {\n      const signatureString = CryptoJS.HmacSHA256(data, secretKey).toString(CryptoJS.enc.Base64);\n      console.log(signatureString);\n      return signatureString;\n  }\n\n  private uuid(lengthOfCode: number) {\n    const possible = \"abcde1234567890\";\n    let text = \"\";\n    for (let i = 0; i < lengthOfCode; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n      return text;\n  }\n\n}\n","<iframe name=\"sa_iframe\" src=\"assets/iframe.jpg\" id=\"sa_iframe\" height=\"430\" width=\"600\" scrolling=\"yes\"></iframe> "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}