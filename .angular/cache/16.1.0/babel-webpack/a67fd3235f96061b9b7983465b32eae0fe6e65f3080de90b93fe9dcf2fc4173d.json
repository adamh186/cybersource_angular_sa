{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as CryptoJS from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nclass PaymentConfirmComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.paymentForm = document.getElementById('payment_form');\n    this.accessKey = 'c66502af927a3533bfa6d215394eda4c';\n    this.profileId = 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F';\n    this.transactionUuid = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    this.signedFieldNames = 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency';\n    this.signedDateTime = new Date();\n    this.locale = 'en-US';\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n  }\n  onSubmit() {\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n  }\n  sign(params) {\n    console.log(params);\n    return this.signData(this.buildDataToSign(params), environment.SECRET_KEY);\n  }\n  signData(data, secretKey) {\n    const signature = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey);\n    const signatureBase = signature.toString(CryptoJS.enc.Base64);\n    console.log(signatureBase);\n    return signatureBase;\n  }\n  buildDataToSign(params) {\n    const signedFieldNames = params.signed_field_names.split(',');\n    const dataToSign = signedFieldNames.map(field => `${field}=${params[field]}`);\n    console.log('!!!!!!!!!!!');\n    console.log(this.commaSeparate(dataToSign));\n    return this.commaSeparate(dataToSign);\n  }\n  commaSeparate(dataToSign) {\n    return dataToSign.join(',');\n  }\n}\nPaymentConfirmComponent.ɵfac = function PaymentConfirmComponent_Factory(t) {\n  return new (t || PaymentConfirmComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nPaymentConfirmComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentConfirmComponent,\n  selectors: [[\"app-payment-confirm\"]],\n  decls: 35,\n  vars: 7,\n  consts: [[\"type\", \"hidden\", \"name\", \"access_key\", 3, \"value\"], [\"type\", \"hidden\", \"name\", \"profile_id\", 3, \"value\"], [\"type\", \"hidden\", \"name\", \"transaction_uuid\", 3, \"value\"], [\"type\", \"hidden\", \"name\", \"signed_field_names\", 3, \"value\"], [\"type\", \"hidden\", \"name\", \"unsigned_field_names\", \"value\", \"\"], [\"type\", \"hidden\", \"name\", \"signed_date_time\", 3, \"value\"], [\"type\", \"hidden\", \"name\", \"locale\", 3, \"value\"], [\"id\", \"paymentDetailsSection\", 1, \"section\"], [\"type\", \"text\", \"name\", \"transaction_type\", \"size\", \"25\", \"value\", \"authorization\"], [\"type\", \"text\", \"name\", \"amount\", \"size\", \"25.00\", \"value\", \"25\"], [\"type\", \"text\", \"name\", \"reference_number\", \"size\", \"25\", \"value\", \"123\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\"], [\"type\", \"submit\", 1, \"button\"]],\n  template: function PaymentConfirmComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"payment-confirm works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"input\", 0)(3, \"input\", 1)(4, \"input\", 2)(5, \"input\", 3)(6, \"input\", 4)(7, \"input\", 5)(8, \"input\", 6);\n      i0.ɵɵelementStart(9, \"fieldset\")(10, \"legend\");\n      i0.ɵɵtext(11, \"Payment Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"span\");\n      i0.ɵɵtext(14, \"transaction_type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 8)(16, \"br\");\n      i0.ɵɵelementStart(17, \"span\");\n      i0.ɵɵtext(18, \"amount:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9)(20, \"br\");\n      i0.ɵɵelementStart(21, \"span\");\n      i0.ɵɵtext(22, \"reference_number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"form\", 11);\n      i0.ɵɵlistener(\"ngSubmit\", function PaymentConfirmComponent_Template_form_ngSubmit_24_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(25, \"div\")(26, \"label\", 12);\n      i0.ɵɵtext(27, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\")(30, \"label\", 14);\n      i0.ɵɵtext(31, \" Address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"button\", 16);\n      i0.ɵɵtext(34, \"Purchase\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.accessKey);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.profileId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.transactionUuid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.signedFieldNames);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.signedDateTime);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.locale);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PaymentConfirmComponent };","map":{"version":3,"names":["environment","CryptoJS","PaymentConfirmComponent","constructor","formBuilder","paymentForm","document","getElementById","accessKey","profileId","transactionUuid","Math","random","toString","substring","signedFieldNames","signedDateTime","Date","locale","checkoutForm","group","name","address","onSubmit","console","warn","value","reset","sign","params","log","signData","buildDataToSign","SECRET_KEY","data","secretKey","signature","HmacSHA256","HMAC_SHA256","signatureBase","enc","Base64","signed_field_names","split","dataToSign","map","field","commaSeparate","join","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","PaymentConfirmComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","PaymentConfirmComponent_Template_form_ngSubmit_24_listener","ɵɵadvance","ɵɵpropertyInterpolate","ɵɵproperty"],"sources":["C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment-confirm\\payment-confirm.component.ts","C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment-confirm\\payment-confirm.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport * as CryptoJS from 'crypto-js';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-payment-confirm',\n  templateUrl: './payment-confirm.component.html',\n  styleUrls: ['./payment-confirm.component.scss']\n})\nexport class PaymentConfirmComponent {\n  paymentForm = document.getElementById('payment_form') as HTMLFormElement;\n  accessKey = 'c66502af927a3533bfa6d215394eda4c';\n  profileId = 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F';\n  transactionUuid = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  signedFieldNames = 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency';\n  signedDateTime = new Date();\n  locale = 'en-US';\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n  constructor(    \n    private formBuilder: FormBuilder\n  ) {}\n\n  onSubmit(): void {      \n      console.warn('Your order has been submitted', this.checkoutForm.value);\n      this.checkoutForm.reset();\n  }\n\n  public sign(params: any): string {\n      console.log(params);\n      return this.signData(this.buildDataToSign(params), environment.SECRET_KEY);\n  }\n\n  public signData(data: string, secretKey: string): string {\n      const signature = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey);\n      const signatureBase = signature.toString(CryptoJS.enc.Base64);\n      console.log(signatureBase);\n      return signatureBase;\n  }\n\n  public buildDataToSign(params: any): string {\n      const signedFieldNames = params.signed_field_names.split(',');\n      const dataToSign = signedFieldNames.map((field: string) => `${field}=${params[field]}`);\n      console.log('!!!!!!!!!!!');\n      console.log(this.commaSeparate(dataToSign));\n      return this.commaSeparate(dataToSign);\n  }\n\n  public commaSeparate(dataToSign: string[]): string {\n      return dataToSign.join(',');\n  }\n}\n","<p>payment-confirm works!</p>\n<input type=\"hidden\" name=\"access_key\" value=\"{{accessKey}}\">\n<input type=\"hidden\" name=\"profile_id\" value=\"{{profileId}}\">\n<input type=\"hidden\" name=\"transaction_uuid\" value=\"{{transactionUuid}}\">\n<input type=\"hidden\" name=\"signed_field_names\" value=\"{{signedFieldNames}}\">\n<input type=\"hidden\" name=\"unsigned_field_names\" value=\"\">\n<input type=\"hidden\" name=\"signed_date_time\" value=\"{{signedDateTime}}\">\n<input type=\"hidden\" name=\"locale\" value=\"{{locale}}\">\n<fieldset>\n    <legend>Payment Details</legend>\n    <div id=\"paymentDetailsSection\" class=\"section\">\n        <span>transaction_type:</span><input type=\"text\" name=\"transaction_type\" size=\"25\" value=\"authorization\" /><br/>\n        <span>amount:</span><input type=\"text\" name=\"amount\" size=\"25.00\" value=\"25\" /><br/>\n        <span>reference_number:</span><input type=\"text\" name=\"reference_number\" size=\"25\" value=\"123\" />\n    </div>\n</fieldset> \n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div>\n      <label for=\"name\">\n        Name\n      </label>\n      <input id=\"name\" type=\"text\" formControlName=\"name\">\n    </div>\n  \n    <div>\n      <label for=\"address\">\n        Address\n      </label>\n      <input id=\"address\" type=\"text\" formControlName=\"address\">\n    </div>\n  \n    <button class=\"button\" type=\"submit\">Purchase</button>\n  \n  </form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}