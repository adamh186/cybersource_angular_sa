{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nclass PaymentComponent {\n  constructor(formBuilder, http, datePipe) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.datePipe = datePipe;\n    this.params = new Map();\n  }\n  ngAfterViewInit() {\n    this.postToExternalSite();\n  }\n  // create a form for the post request\n  postToExternalSite() {\n    const form = window.document.createElement('form');\n    form.setAttribute('method', 'post');\n    form.setAttribute('action', 'https://testsecureacceptance.cybersource.com/embedded/pay');\n    // use _self to redirect in same tab, _blank to open in new tab\n    // form.setAttribute('target', '_blank');\n    form.setAttribute('target', 'sa_iframe');\n    // Add all the data to be posted as Hidden elements\n    form.appendChild(this.createHiddenElement('access_key', 'c66502af927a3533bfa6d215394eda4c'));\n    form.appendChild(this.createHiddenElement('profile_id', 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F'));\n    form.appendChild(this.createHiddenElement('transaction_uuid', '649093fec08e3'));\n    form.appendChild(this.createHiddenElement('signed_field_names', 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency'));\n    form.appendChild(this.createHiddenElement('unsigned_field_names', ''));\n    form.appendChild(this.createHiddenElement('signed_date_time', '2023-06-19T17:58:38Z'));\n    form.appendChild(this.createHiddenElement('locale', 'en-US'));\n    form.appendChild(this.createHiddenElement('transaction_type', 'authorization'));\n    form.appendChild(this.createHiddenElement('amount', '25'));\n    form.appendChild(this.createHiddenElement('reference_number', '123456789'));\n    form.appendChild(this.createHiddenElement('currency', 'usd'));\n    this.sign(this.params);\n    form.appendChild(this.createHiddenElement('signature', 'DXRaGtqAXiLJPQxujjaJdOtQfpS4Kde93VxZrFHEsVc='));\n    console.log(form);\n    window.document.body.appendChild(form);\n    form.submit();\n  }\n  // create the form\n  createHiddenElement(name, value) {\n    const hiddenField = document.createElement('input');\n    hiddenField.setAttribute('name', name);\n    hiddenField.setAttribute('value', value);\n    hiddenField.setAttribute('type', 'hidden');\n    this.params.set(name, value);\n    return hiddenField;\n  }\n  dateString() {\n    return this.datePipe.transform(Date.now(), 'yyyy-MM-ddTHH:mm:ss') + \"Z\";\n  }\n  sign(param) {\n    const params = param.split(\"=\");\n    console.log(params);\n    return this.signData(this.buildDataToSign(params), environment.SECRET_KEY);\n  }\n  signData(data, secretKey) {\n    const signature = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey);\n    const signatureBase = signature.toString(CryptoJS.enc.Base64);\n    console.log(signatureBase);\n    const signatureString = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey).toString(CryptoJS.enc.Base64);\n    console.log(signatureString);\n    return signatureString;\n  }\n  buildDataToSign(params) {\n    const signedFieldNames = params.signed_field_names.split(',');\n    const dataToSign = signedFieldNames.map(field => `${field}=${params[field]}`);\n    console.log('!!!!!!!!!!!');\n    console.log(this.commaSeparate(dataToSign));\n    return this.commaSeparate(dataToSign);\n  }\n  commaSeparate(dataToSign) {\n    return dataToSign.join(',');\n  }\n}\nPaymentComponent.ɵfac = function PaymentComponent_Factory(t) {\n  return new (t || PaymentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.DatePipe));\n};\nPaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentComponent,\n  selectors: [[\"app-payment\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[\"name\", \"sa_iframe\", \"src\", \"assets/iframe.jpg\", \"id\", \"sa_iframe\", \"height\", \"430\", \"width\", \"600\", \"scrolling\", \"yes\"]],\n  template: function PaymentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"iframe\", 0);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PaymentComponent };","map":{"version":3,"names":["environment","PaymentComponent","constructor","formBuilder","http","datePipe","params","Map","ngAfterViewInit","postToExternalSite","form","window","document","createElement","setAttribute","appendChild","createHiddenElement","sign","console","log","body","submit","name","value","hiddenField","set","dateString","transform","Date","now","param","split","signData","buildDataToSign","SECRET_KEY","data","secretKey","signature","CryptoJS","HmacSHA256","HMAC_SHA256","signatureBase","toString","enc","Base64","signatureString","signedFieldNames","signed_field_names","dataToSign","map","field","commaSeparate","join","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","DatePipe","selectors","decls","vars","consts","template","PaymentComponent_Template","rf","ctx","ɵɵelement"],"sources":["C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment\\payment.component.ts","C:\\projects\\cybersource_sa_angular\\cybersource_sa\\src\\app\\payment\\payment.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss']\n})\nexport class PaymentComponent implements AfterViewInit {\n  params = new Map();\n  constructor(    \n    private formBuilder: FormBuilder, private http: HttpClient, private datePipe: DatePipe\n  ) {}\n\n  ngAfterViewInit() {\n    this.postToExternalSite();\n  }\n  // create a form for the post request\n  postToExternalSite(): void {\n    const form = window.document.createElement('form');\n    form.setAttribute('method', 'post');\n    form.setAttribute('action', 'https://testsecureacceptance.cybersource.com/embedded/pay');\n    // use _self to redirect in same tab, _blank to open in new tab\n    // form.setAttribute('target', '_blank');\n    form.setAttribute('target', 'sa_iframe');\n\n    // Add all the data to be posted as Hidden elements\n    \n    form.appendChild(this.createHiddenElement('access_key', 'c66502af927a3533bfa6d215394eda4c'));\n    form.appendChild(this.createHiddenElement('profile_id', 'B63C4A44-D1AE-4F14-B0D5-4FFC7813736F'));\n    form.appendChild(this.createHiddenElement('transaction_uuid', '649093fec08e3'));\n    form.appendChild(this.createHiddenElement('signed_field_names', 'access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency'));\n    form.appendChild(this.createHiddenElement('unsigned_field_names', ''));\n    form.appendChild(this.createHiddenElement('signed_date_time', '2023-06-19T17:58:38Z'));\n    form.appendChild(this.createHiddenElement('locale', 'en-US'));\n    form.appendChild(this.createHiddenElement('transaction_type', 'authorization'));\n    form.appendChild(this.createHiddenElement('amount', '25'));\n    form.appendChild(this.createHiddenElement('reference_number', '123456789'));\n    form.appendChild(this.createHiddenElement('currency', 'usd'));   \n    this.sign(this.params);\n    \n    form.appendChild(this.createHiddenElement('signature', 'DXRaGtqAXiLJPQxujjaJdOtQfpS4Kde93VxZrFHEsVc='));    \n    console.log(form);\n    window.document.body.appendChild(form);\n    form.submit();\n  }\n  \n\n  // create the form\n  private createHiddenElement(name: string, value: string): HTMLInputElement {\n    const hiddenField = document.createElement('input');\n    hiddenField.setAttribute('name', name);\n    hiddenField.setAttribute('value', value);\n    hiddenField.setAttribute('type', 'hidden');\n    this.params.set(name, value);\n    return hiddenField;\n  }\n\n  private dateString(): string {\n    return this.datePipe.transform(Date.now(), 'yyyy-MM-ddTHH:mm:ss') + \"Z\";\n  }\n\n  public sign(param: any): string {\n    const params = param.split(\"=\");\n    console.log(params);\n\n    return this.signData(this.buildDataToSign(params), environment.SECRET_KEY);\n  }\n\n  public signData(data: string, secretKey: string): string {\n      const signature = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey);\n      const signatureBase = signature.toString(CryptoJS.enc.Base64);\n      console.log(signatureBase);\n      const signatureString = CryptoJS.HmacSHA256(environment.HMAC_SHA256, secretKey).toString(CryptoJS.enc.Base64);\n      console.log(signatureString);\n      return signatureString;\n  }\n\n  public buildDataToSign(params: any): string {\n      const signedFieldNames = params.signed_field_names.split(',');\n      const dataToSign = signedFieldNames.map((field: string) => `${field}=${params[field]}`);\n      console.log('!!!!!!!!!!!');\n      console.log(this.commaSeparate(dataToSign));\n      return this.commaSeparate(dataToSign);\n  }\n\n  public commaSeparate(dataToSign: string[]): string {\n      return dataToSign.join(',');\n  }\n}\n","<iframe name=\"sa_iframe\" src=\"assets/iframe.jpg\" id=\"sa_iframe\" height=\"430\" width=\"600\" scrolling=\"yes\"></iframe> "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}